html {
  min-width: 100%;
  /* min-height: 100%; */
}

* {
  user-select: none;
  -webkit-user-select: none;
}

body {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow:hidden;
  background-repeat: no-repeat;
  /* background-size: 100% auto; */
  /* background-size: auto 100%; */
  /* background-position: center top; */
  /* min-height: 100%; */
  background-attachment: fixed;
}

.App {
  text-align: center;
}

pre {
  position: absolute;
  bottom: 1%;
  left: 50%;
  transform: translateX(-50%);
  display: inline-block;
  padding: 2px;
	background: rgba(255,255,255,0.5);
}

.hidden {
  display: none;
}
.inactive {
  pointer-events: none;
}

button {
  border-radius: 0.25em;
	background: rgb(18,170,23);
	border: 0;
	font-size: 2em;
	padding: 0.25em 0.75em;
	/* box-shadow: 0 0 15px 1px purple; */
	box-shadow: 0 0 15px 1px black;
  font-family: 'Montserrat', sans-serif;
  text-shadow: 0 0 5px rgb(0,240,0);
  user-select: none;
  -webkit-user-select: none;
}
button:focus {
  outline: none;
}
button:active {
  background: rgb(8,180,0);
  /* box-shadow: 0 0 7px 0px purple; */
  box-shadow: 0 0 7px 0px black;
}
button span {
  position: relative;
  display: inline-block;
}
button:active span {
  display: inline-block;
  top: 1px;
}

#newGameButton {
  margin-top: 1em;
}

#startButton {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
}

.App > div {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.row {
  padding-left:  1em;
  padding-right: 1em;
}
.row > div {
  margin: 0 auto;
  width: 100%;
  /* height: 150px; */
  font-size: 1.5em;
  color: white;
  text-align: center;
  font-family: 'Press Start 2P', cursive;
  text-shadow: 0 0 10px black;
  /* pointer-events: none; */
}

.row.level {
  padding: 0;
}
.row.level > div {
  font-size: 2.5em;
  white-space: nowrap;
}
.reactSwipeWrap {
  position: absolute;
  left: 0;
  right: 0;
}
#playerCountSwipeWrap {
  top: 10%;
  bottom: 60%;
}
#levelSwipeWrap {
  top: 10%;
  bottom: 60%;
}
#livesSwipeWrap {
  top: 30%;
  bottom: 40%;
}
#starsSwipeWrap {
  top: 60%;
  bottom: 10%;
}
#livesSwipeWrap .label,
#starsSwipeWrap .label {
  padding-top: 0;
  padding-bottom: 0.5em;
}

#playerCountDisplay {
  display: none;
}
#playerCountDisplay.visible {
  display: block;
}

.images,
.label {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}
#playerCountSwipeWrap .label {
  margin-top: 2em;
  font-size: 2em;
}
#playerCountSwipeWrap .images,
#playerCountSwipeWrap .label {
  /* padding-top: 1em;
  padding-bottom: 1em; */
}

.row .images {
  white-space: nowrap;
  display: flex;
  /* margin-bottom: 0.5em; */
}
.row .images > div {
  width: 1px;
  height: 90px;
  flex: 1 1 auto;
  position: relative;
}
img.star,
img.starEmpty,
img.bunny,
img.bunnyDead {
  position: absolute;
  left: 50%;
  top: 0;
  width:  90px;
  height: 90px;
  transform: translateX(-50%);
}
img.brain {
  visibility: hidden;
  width: 99px;
  height: 69px;
}
/* img.brain {
  display: inline-block;
  width: 69px;
  height: 69px;
  border-radius: 35px;
  border: 4px solid rgb(18,170,23);
  margin: 0 7px;
  box-shadow: 0 0 10px 1px black;
} */

// https://stackoverflow.com/questions/8693733/how-to-give-outer-glow-to-an-object-in-a-transparent-png-using-css3

#fireworks {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: none;
  pointer-events: none;
}
