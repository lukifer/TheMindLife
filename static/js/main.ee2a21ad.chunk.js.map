{"version":3,"sources":["fireworks.js","App.js","actions/setLevel.js","actions/setLives.js","actions/setStars.js","actions/setPlayerCount.js","actions/setGameState.js","reducers/mindReducer.js","reducers/rootReducer.js","serviceWorker.js","index.js","store.js"],"names":["SCREEN_HEIGHT","window","innerWidth","innerHeight","particles","Particle","pos","this","x","y","vel","shrink","size","resistance","gravity","flick","alpha","fade","color","Rocket","apply","explosionColor","prototype","update","render","c","exists","save","globalCompositeOperation","r","gradient","createRadialGradient","addColorStop","fillStyle","beginPath","arc","Math","random","PI","closePath","fill","restore","constructor","explode","count","i","particle","angle","speed","cos","sin","push","App","props","playerCount","level","curLevel","mind","reduce","lives","lvl","stars","maxLevel","numSlides","Array","map","_","react_default","a","createElement","key","className","concat","_this","max","maxLives","src","alt","j","_this2","maxStars","num","prevProps","prevState","snapshot","prev","curr","newLivesPos","livesSwipe","getPos","self","setTimeout","slide","newStarsPos","starsSwipe","_this3","id","gameState","lib_default","ref","reactSwipe","playerCountSwipe","childCount","playerCountPanes","length","swipeOptions","continuous","startSlide","callback","div","swiping","fraction","transitionEnd","setPlayerCount","onClick","setGameState","levelSwipe","levelPanes","setLevel","livesPanes","setLives","starsPanes","setStars","Component","connect","state","Object","objectSpread","dispatch","type","payload","INIT_STATE","combineReducers","arguments","undefined","action","assign","baseState","Boolean","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee2a21ad.chunk.js","sourcesContent":["//https://jsfiddle.net/dtrooper/AceJJ/\n\nvar SCREEN_WIDTH = window.innerWidth,\n    SCREEN_HEIGHT = window.innerHeight,\n    // mousePos = {\n    //     x: 400,\n    //     y: 300\n    // },\n\n    // create canvas\n    //canvas = document.createElement('canvas'),\n    canvas,\n    //context = canvas.getContext('2d'),\n    context,\n    launchInterval,\n    loopInterval,\n    particles = [],\n    rockets = [],\n    MAX_PARTICLES = 400;\n\n    // canvas.width = SCREEN_WIDTH;\n    // canvas.height = SCREEN_HEIGHT;\n\n// init\n// $(document).ready(function() {\n//     //document.body.appendChild(canvas);\n//     canvas.width = SCREEN_WIDTH;\n//     canvas.height = SCREEN_HEIGHT;\n//     // setInterval(launch, 800);\n//     // setInterval(loop, 1000 / 50);\n// });\n\n// update mouse position\n// $(document).mousemove(function(e) {\n//     e.preventDefault();\n//     mousePos = {\n//         x: e.clientX,\n//         y: e.clientY\n//     };\n// });\n\n// launch more rockets!!!\n// $(document).mousedown(function(e) {\n//     for (var i = 0; i < 5; i++) {\n//         launchFrom(Math.random() * SCREEN_WIDTH * 2 / 3 + SCREEN_WIDTH / 6);\n//     }\n// });\n\n// function launch() {\n//     launchFrom(mousePos.x);\n// }\n\nfunction launchFrom(x) {\n    if (rockets.length < 10) {\n        var rocket = new Rocket(x);\n        rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\n        rocket.vel.y = Math.random() * -3 - 4;\n        rocket.vel.x = Math.random() * 6 - 3;\n        rocket.size = 8;\n        rocket.shrink = 0.999;\n        rocket.gravity = 0.01;\n        rockets.push(rocket);\n    }\n}\n\nfunction loop() {\n    // update screen size\n    // if (SCREEN_WIDTH != window.innerWidth) {\n    //     canvas.width = SCREEN_WIDTH = window.innerWidth;\n    // }\n    // if (SCREEN_HEIGHT != window.innerHeight) {\n    //     canvas.height = SCREEN_HEIGHT = window.innerHeight;\n    // }\n\n    // clear canvas\n    context.fillStyle = \"rgba(0, 0, 0, 0.001)\";\n    context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    var mousePos = {\n      x: parseInt(Math.random() * SCREEN_WIDTH),\n      y: parseInt(Math.random() * SCREEN_HEIGHT),\n    };\n\n    var existingRockets = [];\n\n    var i;\n    for (i = 0; i < rockets.length; i++) {\n        // update and render\n        rockets[i].update();\n        rockets[i].render(context);\n\n        // calculate distance with Pythagoras\n        var distance = Math.sqrt(Math.pow(mousePos.x - rockets[i].pos.x, 2) + Math.pow(mousePos.y - rockets[i].pos.y, 2));\n\n        // random chance of 1% if rockets is above the middle\n        var randomChance = rockets[i].pos.y < (SCREEN_HEIGHT * 2 / 3) ? (Math.random() * 100 <= 1) : false;\n\n/* Explosion rules\n             - 80% of screen\n            - going down\n            - close to the mouse\n            - 1% chance of random explosion\n        */\n        if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\n            rockets[i].explode();\n        } else {\n            existingRockets.push(rockets[i]);\n        }\n    }\n\n    rockets = existingRockets;\n\n    var existingParticles = [];\n\n    for (i = 0; i < particles.length; i++) {\n        particles[i].update();\n\n        // render and save particles that can be rendered\n        if (particles[i].exists()) {\n            particles[i].render(context);\n            existingParticles.push(particles[i]);\n        }\n    }\n\n    // update array with existing particles - old particles should be garbage collected\n    particles = existingParticles;\n\n    while (particles.length > MAX_PARTICLES) {\n        particles.shift();\n    }\n}\n\nfunction Particle(pos) {\n    this.pos = {\n        x: pos ? pos.x : 0,\n        y: pos ? pos.y : 0\n    };\n    this.vel = {\n        x: 0,\n        y: 0\n    };\n    this.shrink = .97;\n    this.size = 2;\n\n    this.resistance = 1;\n    this.gravity = 0;\n\n    this.flick = false;\n\n    this.alpha = 1;\n    this.fade = 0;\n    this.color = 0;\n}\n\nParticle.prototype.update = function() {\n    // apply resistance\n    this.vel.x *= this.resistance;\n    this.vel.y *= this.resistance;\n\n    // gravity down\n    this.vel.y += this.gravity;\n\n    // update position based on speed\n    this.pos.x += this.vel.x;\n    this.pos.y += this.vel.y;\n\n    // shrink\n    this.size *= this.shrink;\n\n    // fade out\n    this.alpha -= this.fade;\n};\n\nParticle.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\nParticle.prototype.exists = function() {\n    return this.alpha >= 0.1 && this.size >= 1;\n};\n\nfunction Rocket(x) {\n    Particle.apply(this, [{\n        x: x,\n        y: SCREEN_HEIGHT}]);\n\n    this.explosionColor = 0;\n}\n\nRocket.prototype = new Particle();\nRocket.prototype.constructor = Rocket;\n\nRocket.prototype.explode = function() {\n    var count = Math.random() * 10 + 80;\n\n    for (var i = 0; i < count; i++) {\n        var particle = new Particle(this.pos);\n        var angle = Math.random() * Math.PI * 2;\n\n        // emulate 3D effect by using cosine and put more particles in the middle\n        var speed = Math.cos(Math.random() * Math.PI / 2) * 15;\n\n        particle.vel.x = Math.cos(angle) * speed;\n        particle.vel.y = Math.sin(angle) * speed;\n\n        particle.size = 10;\n\n        particle.gravity = 0.2;\n        particle.resistance = 0.92;\n        particle.shrink = Math.random() * 0.05 + 0.93;\n\n        particle.flick = true;\n        particle.color = this.explosionColor;\n\n        particles.push(particle);\n    }\n};\n\nRocket.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\n// setInterval(launch, 800);\n// setInterval(loop, 1000 / 50);\n\nexport default {\n  canvas: canvas,\n  start: function() {\n    canvas = document.getElementById('fireworks');\n    canvas.style.display = \"block\";\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    context = canvas.getContext('2d');\n    launchInterval = setInterval(function() { launchFrom(parseInt(Math.random() * SCREEN_WIDTH)); }, 800);\n    loopInterval = setInterval(loop, 1000 / 50);\n  },\n  stop: function() {\n    if(launchInterval) clearInterval(launchInterval);\n    if(loopInterval) clearInterval(loopInterval);\n    launchInterval = false;\n    loopInterval = false;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect }          from 'react-redux';\nimport ReactSwipe           from 'react-swipe';\nimport fireworks            from './fireworks';\n\nimport { setLevel }       from './actions/setLevel'\nimport { setLives }       from './actions/setLives'\nimport { setStars }       from './actions/setStars'\nimport { setPlayerCount } from './actions/setPlayerCount'\nimport { setGameState }   from './actions/setGameState'\n\nimport './App.css';\n\nconst SLIDE_SPEED = 500;\n\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setLevel:       (level)       => dispatch(setLevel(level)),\n  setLives:       (lives)       => dispatch(setLives(lives)),\n  setStars:       (stars)       => dispatch(setStars(stars)),\n  setPlayerCount: (playerCount) => dispatch(setPlayerCount(playerCount)),\n  setGameState:   (gameState)   => dispatch(setGameState(gameState)),\n})\n\nclass App extends Component {\n\n  // constructor() {\n  //   super()\n  // }\n\n  maxLevel() {\n    switch(this.props.playerCount) {\n      case 4:  return 8;\n      case 3:  return 10;\n      case 2:  return 12;\n      default: return 12;\n    }\n  }\n\n  maxLives(level) {\n    const gainLivesAtLevel = [3, 6, 9];\n    const curLevel = level || this.props.mind.level;\n\n    const result = gainLivesAtLevel.reduce((lives, lvl) => {\n      if(curLevel >= lvl) return lives + 1;\n      return lives;\n    }, this.props.playerCount || 2); // begin with 1 life per player\n\n    //return Math.max(result, this.props.mind.lives);\n    return result;\n  }\n\n  maxStars(level) {\n    const gainStarsAtLevel = [2, 5, 8];\n    const curLevel = level || this.props.mind.level;\n\n    const result = gainStarsAtLevel.reduce((stars, lvl) => {\n      if(curLevel >= lvl) return stars + 1;\n      return stars;\n    }, 1);\n\n    return result;\n  }\n\n  levelPanes() {\n    const curLevel = this.props.level || 1;\n    const maxLevel = this.maxLevel();\n    const numSlides = maxLevel - curLevel - - 2;\n\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"level\"+i}>\n          <div className=\"row level\">\n            <div className=\"label\">\n              {/* Level {`${i+curLevel}`} {i - - curLevel} {maxLevel} */}\n              {i - - curLevel <= maxLevel && <span>Level {`${i+curLevel}`}</span>}\n              {i - - curLevel > maxLevel && <span>VICTORY</span>}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  livesPanes() {\n    // We allow lives to extend beyond the max, to keep the downgraded cell rendered while reverting levels\n    let numSlides = Math.max(this.maxLives() - - 1 || 0, this.props.mind.lives);\n\n    let slides = Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"lives\"+i}>\n          <div className=\"row lives\">\n            <div className=\"images\">\n              {i === 0 && <img key={\"bunny-dead\"} className=\"bunny bunnyDead\" src=\"/img/bunny-dead.png\" alt=\"Game Over\" />}\n              {i   > 0 &&\n                Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <img key={\"bunny\"+i+j} className=\"bunny\" src=\"/img/bunny.png\" alt={\"Life #\"+(j - -1)} /> );\n                })\n              }\n            </div>\n            <div className=\"label\">\n              {i === 0 && <span className=\"label\">GAME OVER</span>}\n              {i   > 0 && <span className=\"label\">Lives {`${i}`}  / {this.maxLives()}</span>}\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return slides;\n  }\n\n  starsPanes() {\n    let numSlides = Math.max(this.maxStars() - - 1 || 0, this.props.mind.stars);\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"stars\"+i}>\n          <div className=\"row stars\">\n            <div className=\"images\">\n              {\n                i > 0 && Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <img key={\"star\"+i+j} className=\"star\" src=\"/img/star.png\" alt={\"Star #\"+(j - -1)} /> );\n                })\n              }\n              {i === 0 && <img key={\"star-empty\"} className=\"starEmpty\" src=\"/img/star_bw.png\" alt=\"0 Stars\" /> }\n            </div>\n            <div className=\"label\">Stars {i} / {this.maxStars()}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  playerCountPanes() {\n    const countArray = [2, 3, 4];\n    return countArray.map((num, i) => {\n      return (\n        <div key={\"playerCount\"+i}>\n          <div className=\"row playerCount\">\n            <div className=\"images\">\n              {\n                Array.apply(null, Array(num)).map((_, j) => {\n                  return ( <img key={\"brain\"+i+j} className=\"brain\" src=\"/img/brain.jpg\" alt={\"Brain #\"+(j - -1)} /> );\n                })\n              }\n            </div>\n            <div className=\"label\">{`${num}`} Players</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const prev = prevProps.mind;\n    const curr = this.props.mind;\n\n    // If our level changed, we may need to increase lives or stars\n    if(prev.level !== curr.level) {\n      if(this.maxLives(prev.level) < this.maxLives(curr.level)) {\n        var newLivesPos = this.livesSwipe.getPos() - - 1;\n\n        // FIXME: Timing bug\n        const self = this;\n        setTimeout(function() {\n          self.livesSwipe.slide(newLivesPos, SLIDE_SPEED);\n        }, 0);\n      }\n\n      else if(this.maxStars(prev.level) < this.maxStars(curr.level)) {\n        var newStarsPos = this.starsSwipe.getPos() - - 1;\n\n        // FIXME: Timing bug\n        const self = this;\n        setTimeout(function() {\n          self.starsSwipe.slide(newStarsPos, SLIDE_SPEED);\n        }, 0);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Uncomment to debug */}\n        {/*\n        <pre>{ JSON.stringify(this.props) }</pre>\n        */}\n\n        <div id=\"preWrap\" className={this.props.mind.gameState === \"pre\" ? \"\" : \"hidden\"}>\n          <div id=\"playerCountSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.playerCountSwipe = reactSwipe)}\n              childCount={this.playerCountPanes().length}\n              className=\"playerCountSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.playerCount - 2,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => this.props.setPlayerCount(num - - 2)\n              }}\n            >\n              {this.playerCountPanes()}\n            </ReactSwipe>\n            <button\n              id=\"startButton\"\n              onClick={(x) => this.props.setGameState(\"active\")}\n              className={this.props.mind.gameState === \"pre\" ? \"visible\" : \"\"}\n            >\n              <span>Start Game</span>\n            </button>\n          </div>\n        </div>\n        {/* end #preWrap */}\n\n        <div id=\"activeWrap\" className={this.props.mind.gameState === \"pre\" ? \"hidden\" : \"\"}>\n\n          <div id=\"playerCountDisplay\">{this.props.mind.playerCount} Players</div>\n\n          <div id=\"levelSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.levelSwipe = reactSwipe)}\n              childCount={this.levelPanes().length}\n              className=\"levelSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.level - 1,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  if(num - - 1 > this.maxLevel()) {\n                    this.props.setGameState(\"win\");\n                    //fireworks.start();\n                  } else {\n                    this.props.setLevel(num - - 1);\n                  }\n                },\n              }}\n            >\n              {this.levelPanes()}\n            </ReactSwipe>\n          </div>\n          {/* end #levelSwipeWrap */}\n\n          <div id=\"livesSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.livesSwipe = reactSwipe)}\n              childCount={this.livesPanes().length}\n              className=\"livesSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.lives, //Math.min(this.props.mind.lives, this.maxLives()),\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setLives(num);\n                }\n              }}\n            >\n              {this.livesPanes()}\n            </ReactSwipe>\n          </div>\n          {/* end #livesSwipeWrap */}\n\n          <div id=\"starsSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.starsSwipe = reactSwipe)}\n              childCount={this.starsPanes().length}\n              className={this.props.mind.gameState === \"active\" ? \"starsSwipe\" : \"starsSwipe hidden\"}\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.stars,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setStars(num);\n                },\n              }}\n            >\n              {this.starsPanes()}\n            </ReactSwipe>\n\n            <button\n              id=\"newGameButton\"\n              onClick={(x) => this.props.setGameState(\"pre\")}\n              className={this.props.mind.gameState === \"win\" || this.props.mind.gameState === \"loss\" ? \"\" : \"hidden\"}\n            >\n              <span>New Game</span>\n            </button>\n\n          </div>\n          {/* end #starsSwipeWrap */}\n\n        </div>\n        {/* end #activeWrap */}\n\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setLevel = (level) => dispatch => {\n  dispatch({\n    type: 'SET_LEVEL',\n    payload: { 'level': level },\n  })\n}\n","export const setLives = (lives) => dispatch => {\n  dispatch({\n    type: 'SET_LIVES',\n    payload: { 'lives': lives },\n  })\n}\n","export const setStars = (stars) => dispatch => {\n  dispatch({\n    type: 'SET_STARS',\n    payload: { 'stars': stars },\n  })\n}\n","export const setPlayerCount = (playerCount) => dispatch => {\n  dispatch({\n    type: 'SET_PLAYER_COUNT',\n    payload: { 'playerCount': playerCount },\n  })\n}\n","export const setGameState = (gameState) => dispatch => {\n  dispatch({\n    type: 'SET_GAME_STATE',\n    payload: { 'gameState': gameState },\n  })\n}\n","const INIT_STATE = {\n  playerCount: 2,\n  level: 1,\n  lives: 2,\n  stars: 1,\n  gameState: 'pre', // pre, active, win, loss\n  // gameState: 'active', // pre, active, win, loss\n}\n\nexport default (state = INIT_STATE, action) => {\n  switch(action.type) {\n    case 'SET_PLAYER_COUNT':\n      return Object.assign({}, state, {\n        playerCount: action.payload.playerCount\n      })\n    case 'SET_LEVEL':\n      return Object.assign({}, state, {\n        level: action.payload.level,\n        gameState: action.payload.level > (16 - (state.playerCount * 2)) // TODO: access maxLevel in scope\n          ? \"win\"\n          : \"active\"\n      });\n    case 'SET_LIVES':\n      return Object.assign({}, state, {\n        lives: action.payload.lives,\n        gameState: action.payload.lives > 0 && state.gameState !== \"win\"\n          ? \"active\"\n          : \"loss\"\n      })\n    case 'SET_STARS':\n      return Object.assign({}, state, {\n        stars: action.payload.stars\n      });\n    case 'SET_GAME_STATE':\n      // Reset to new game if requested\n      const baseState = state.gameState !== \"pre\" && action.payload.gameState === \"pre\"\n        ? INIT_STATE\n        : state;\n      return Object.assign({}, baseState, {\n        gameState: action.payload.gameState\n      });\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport mind from './mindReducer';\n\nexport default combineReducers({\n mind\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport { Provider }       from 'react-redux';\nimport App                from './App';\nimport configureStore     from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}