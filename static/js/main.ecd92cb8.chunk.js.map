{"version":3,"sources":["fireworks.js","Mind.js","App.js","actions/setLevel.js","actions/setLives.js","actions/setStars.js","actions/setPlayerCount.js","actions/setGameState.js","reducers/mindReducer.js","reducers/rootReducer.js","serviceWorker.js","index.js","store.js"],"names":["canvas","context","launchInterval","loopInterval","GAIN_LIVES_AT_LEVEL","GAIN_STARS_AT_LEVEL","src_Mind","val","playerCount","curLevel","this","startingLives","extraLives","reduce","lives","lvl","stars","SCREEN_WIDTH","window","innerWidth","SCREEN_HEIGHT","innerHeight","particles","rockets","MAX_PARTICLES","loop","fillStyle","fillRect","i","mousePos","parseInt","Math","random","existingRockets","length","update","render","distance","sqrt","pow","pos","x","y","randomChance","vel","explode","push","existingParticles","exists","shift","Particle","shrink","size","resistance","gravity","flick","alpha","fade","color","Rocket","apply","explosionColor","prototype","c","save","globalCompositeOperation","r","gradient","createRadialGradient","addColorStop","beginPath","arc","PI","closePath","fill","restore","constructor","count","particle","angle","speed","cos","sin","fireworks","active","start","document","getElementById","style","display","width","height","getContext","setInterval","rocket","floor","launchFrom","stop","clearRect","clearInterval","App","map","num","react_default","a","createElement","key","className","maxLevel","Mind","props","mind","numSlides","Array","_","maxLives","level","max","maxWidth","src","alt","j","maxStars","prevProps","prevState","snapshot","prev","curr","prevMaxLives","currMaxLives","diffLives","newLivesPos","livesSwipe","getPos","self","setTimeout","gameState","slide","prevMaxStars","currMaxStars","diffStars","newStarsPos","starsSwipe","localStorage","setItem","JSON","stringify","_this","id","lib_default","ref","reactSwipe","playerCountSwipe","childCount","playerCountPanes","swipeOptions","continuous","startSlide","callback","div","swiping","fraction","transitionEnd","setPlayerCount","onClick","e","setGameState","levelSwipe","levelPanes","setLevel","numWord","livesPanes","setLives","starsPanes","setStars","Component","connect","state","Object","objectSpread","dispatch","type","payload","INIT_STATE","STORAGE_STATE","parse","getItem","combineReducers","arguments","undefined","action","assign","baseState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","es","src_App_0","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ecd92cb8.chunk.js","sourcesContent":["//https://jsfiddle.net/dtrooper/AceJJ/\n\nvar SCREEN_WIDTH = window.innerWidth,\n    SCREEN_HEIGHT = window.innerHeight,\n    // mousePos = {\n    //     x: 400,\n    //     y: 300\n    // },\n\n    // create canvas\n    //canvas = document.createElement('canvas'),\n    canvas,\n    //context = canvas.getContext('2d'),\n    context,\n    launchInterval,\n    loopInterval,\n    particles = [],\n    rockets = [],\n    MAX_PARTICLES = 400;\n\n    // canvas.width = SCREEN_WIDTH;\n    // canvas.height = SCREEN_HEIGHT;\n\n// init\n// $(document).ready(function() {\n//     //document.body.appendChild(canvas);\n//     canvas.width = SCREEN_WIDTH;\n//     canvas.height = SCREEN_HEIGHT;\n//     // setInterval(launch, 800);\n//     // setInterval(loop, 1000 / 50);\n// });\n\n// update mouse position\n// $(document).mousemove(function(e) {\n//     e.preventDefault();\n//     mousePos = {\n//         x: e.clientX,\n//         y: e.clientY\n//     };\n// });\n\n// launch more rockets!!!\n// $(document).mousedown(function(e) {\n//     for (var i = 0; i < 5; i++) {\n//         launchFrom(Math.random() * SCREEN_WIDTH * 2 / 3 + SCREEN_WIDTH / 6);\n//     }\n// });\n\n// function launch() {\n//     launchFrom(mousePos.x);\n// }\n\nfunction launchFrom(x) {\n    if (rockets.length < 10) {\n        var rocket = new Rocket(x);\n        rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\n        rocket.vel.y = Math.random() * -3 - 4;\n        rocket.vel.x = Math.random() * 6 - 3;\n        rocket.size = 8;\n        rocket.shrink = 0.999;\n        rocket.gravity = 0.01;\n        rockets.push(rocket);\n    }\n}\n\nfunction loop() {\n    // update screen size\n    // if (SCREEN_WIDTH != window.innerWidth) {\n    //     canvas.width = SCREEN_WIDTH = window.innerWidth;\n    // }\n    // if (SCREEN_HEIGHT != window.innerHeight) {\n    //     canvas.height = SCREEN_HEIGHT = window.innerHeight;\n    // }\n\n    // clear canvas\n    context.fillStyle = \"rgba(0, 0, 0, 0.001)\";\n    context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    var mousePos = {\n      x: parseInt(Math.random() * SCREEN_WIDTH),\n      y: parseInt(Math.random() * SCREEN_HEIGHT),\n    };\n\n    var existingRockets = [];\n\n    var i;\n    for (i = 0; i < rockets.length; i++) {\n        // update and render\n        rockets[i].update();\n        rockets[i].render(context);\n\n        // calculate distance with Pythagoras\n        var distance = Math.sqrt(Math.pow(mousePos.x - rockets[i].pos.x, 2) + Math.pow(mousePos.y - rockets[i].pos.y, 2));\n\n        // random chance of 1% if rockets is above the middle\n        var randomChance = rockets[i].pos.y < (SCREEN_HEIGHT * 2 / 3) ? (Math.random() * 100 <= 1) : false;\n\n/* Explosion rules\n             - 80% of screen\n            - going down\n            - close to the mouse\n            - 1% chance of random explosion\n        */\n        if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\n            rockets[i].explode();\n        } else {\n            existingRockets.push(rockets[i]);\n        }\n    }\n\n    rockets = existingRockets;\n\n    var existingParticles = [];\n\n    for (i = 0; i < particles.length; i++) {\n        particles[i].update();\n\n        // render and save particles that can be rendered\n        if (particles[i].exists()) {\n            particles[i].render(context);\n            existingParticles.push(particles[i]);\n        }\n    }\n\n    // update array with existing particles - old particles should be garbage collected\n    particles = existingParticles;\n\n    while (particles.length > MAX_PARTICLES) {\n        particles.shift();\n    }\n}\n\nfunction Particle(pos) {\n    this.pos = {\n        x: pos ? pos.x : 0,\n        y: pos ? pos.y : 0\n    };\n    this.vel = {\n        x: 0,\n        y: 0\n    };\n    this.shrink = .97;\n    this.size = 2;\n\n    this.resistance = 1;\n    this.gravity = 0;\n\n    this.flick = false;\n\n    this.alpha = 1;\n    this.fade = 0;\n    this.color = 0;\n}\n\nParticle.prototype.update = function() {\n    // apply resistance\n    this.vel.x *= this.resistance;\n    this.vel.y *= this.resistance;\n\n    // gravity down\n    this.vel.y += this.gravity;\n\n    // update position based on speed\n    this.pos.x += this.vel.x;\n    this.pos.y += this.vel.y;\n\n    // shrink\n    this.size *= this.shrink;\n\n    // fade out\n    this.alpha -= this.fade;\n};\n\nParticle.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\nParticle.prototype.exists = function() {\n    return this.alpha >= 0.1 && this.size >= 1;\n};\n\nfunction Rocket(x) {\n    Particle.apply(this, [{\n        x: x,\n        y: SCREEN_HEIGHT}]);\n\n    this.explosionColor = 0;\n}\n\nRocket.prototype = new Particle();\nRocket.prototype.constructor = Rocket;\n\nRocket.prototype.explode = function() {\n    var count = Math.random() * 10 + 80;\n\n    for (var i = 0; i < count; i++) {\n        var particle = new Particle(this.pos);\n        var angle = Math.random() * Math.PI * 2;\n\n        // emulate 3D effect by using cosine and put more particles in the middle\n        var speed = Math.cos(Math.random() * Math.PI / 2) * 15;\n\n        particle.vel.x = Math.cos(angle) * speed;\n        particle.vel.y = Math.sin(angle) * speed;\n\n        particle.size = 10;\n\n        particle.gravity = 0.2;\n        particle.resistance = 0.92;\n        particle.shrink = Math.random() * 0.05 + 0.93;\n\n        particle.flick = true;\n        particle.color = this.explosionColor;\n\n        particles.push(particle);\n    }\n};\n\nRocket.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\n// setInterval(launch, 800);\n// setInterval(loop, 1000 / 50);\n\nexport default {\n  canvas: canvas,\n  active: false,\n  start: function() {\n    this.active = true;\n    document.getElementById('fireworks_wrap')\n      .style.display = \"block\";\n    canvas = document.getElementById('fireworks');\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    //canvas.style.display = \"block\";\n    context = canvas.getContext('2d');\n    launchInterval = setInterval(function() { launchFrom(parseInt(Math.random() * SCREEN_WIDTH)); }, 800);\n    loopInterval = setInterval(loop, 1000 / 50);\n  },\n  stop: function() {\n    if(this.active) {\n      this.active = false;\n      document.getElementById('fireworks_wrap')\n        .style.display = \"none\";\n      document.getElementById('fireworks')\n        .getContext('2d')\n        .clearRect(0, 0, canvas.width, canvas.height);\n      if(launchInterval) clearInterval(launchInterval);\n      if(loopInterval) clearInterval(loopInterval);\n      launchInterval = false;\n      loopInterval = false;\n    }\n  }\n}\n","// Lightweight wrapper class for game logic\n\nconst STARTING_STARS = 1;\nconst GAIN_LIVES_AT_LEVEL = [3, 6, 9];\nconst GAIN_STARS_AT_LEVEL = [2, 5, 8];\n\nclass Mind {\n\n  numWord(val) {\n    switch(val) {\n      case 12: return \"Twelve\";\n      case 11: return \"Eleven\";\n      case 10: return \"Ten\";\n      case 9:  return \"Nine\";\n      case 8:  return \"Eight\";\n      case 7:  return \"Seven\";\n      case 6:  return \"Six\";\n      case 5:  return \"Five\";\n      case 4:  return \"Four\";\n      case 3:  return \"Three\";\n      case 2:  return \"Two\";\n      case 1:  return \"One\";\n      default: return \"\";\n    }\n  }\n\n  maxLevel(playerCount) {\n    switch(playerCount) {\n      case 4:  return 8;\n      case 3:  return 10;\n      case 2:  return 12;\n      default: return 12;\n    }\n  }\n\n  startingLives(playerCount) {\n    return playerCount; // begin with 1 life per player\n  }\n\n  maxLives(playerCount, curLevel) {\n    return this.startingLives(playerCount) - - this.extraLives(curLevel);\n  }\n\n  extraLives(curLevel) {\n    return GAIN_LIVES_AT_LEVEL.reduce((lives, lvl) => {\n      if(curLevel >= lvl) return lives + 1;\n      return lives;\n    }, 0);\n  }\n\n  maxStars(curLevel) {\n    return GAIN_STARS_AT_LEVEL.reduce((stars, lvl) => {\n      if(curLevel >= lvl) return stars + 1;\n      return stars;\n    }, STARTING_STARS);\n  }\n}\n\nexport default new Mind();\n\n//export default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component } from 'react';\nimport { connect }          from 'react-redux';\nimport ReactSwipe           from 'react-swipe';\nimport Mind                 from './Mind';\nimport fireworks            from './fireworks';\n\nimport { setLevel }       from './actions/setLevel'\nimport { setLives }       from './actions/setLives'\nimport { setStars }       from './actions/setStars'\nimport { setPlayerCount } from './actions/setPlayerCount'\nimport { setGameState }   from './actions/setGameState'\n\nimport './App.css';\n\nconst SLIDE_SPEED = 500;\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setLevel:       (level)       => dispatch(setLevel(level)),\n  setLives:       (lives)       => dispatch(setLives(lives)),\n  setStars:       (stars)       => dispatch(setStars(stars)),\n  setPlayerCount: (playerCount) => dispatch(setPlayerCount(playerCount)),\n  setGameState:   (gameState)   => dispatch(setGameState(gameState)),\n})\n\nclass App extends Component {\n\n  // constructor() {\n  //   super()\n  // }\n\n  playerCountPanes() {\n    const countArray = [2, 3, 4];\n    return countArray.map((num, i) => {\n      return (\n        <div key={\"playerCount\"+i}>\n          <div className=\"row playerCount\">\n            {/*\n            <div className=\"images\">\n              {\n                Array.apply(null, Array(num)).map((_, j) => {\n                  return ( <img key={\"brain\"+i+j} className=\"brain\" src=\"img/brain.png\" alt={\"Brain #\"+(j - -1)} /> );\n                })\n              }\n            </div>\n            */}\n            <div className=\"label\">{num} Players</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  levelPanes() {\n    const maxLevel = Mind.maxLevel(this.props.mind.playerCount);\n    const numSlides = maxLevel - - 1; // Add a final slide for victory condition\n\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"level\"+i}>\n          <div className=\"row level\">\n            <div className=\"label\">\n              {/* {i - - 1} {maxLevel} {i - - 1 <= maxLevel} */}\n              {i - - 1  <= maxLevel && <span>Level {i - - 1}</span>}\n              {i       === maxLevel && <span>YOU WIN!</span>}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  livesPanes() {\n    // We allow lives to extend beyond the max, to keep the downgraded cell rendered while reverting levels\n    const maxLives = Mind.maxLives(this.props.mind.playerCount, this.props.mind.level) || 0;\n    const numSlides = Math.max(maxLives, this.props.mind.lives) - - 1;\n\n    let slides = Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"lives\"+i}>\n          <div className=\"row lives\">\n            <div className=\"images\" style={{ maxWidth: (i*90)+\"px\" }}>\n              {i === 0 && <div><img key={\"bunny-dead\"} className=\"bunny bunnyDead\" src=\"img/bunny-dead.png\" alt=\"Game Over\" /></div>}\n              {i   > 0 &&\n                Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <div key={\"bunny\"+i+j}><img className=\"bunny\" src=\"img/bunny.png\" alt={\"Life #\"+(j - -1)} /></div> );\n                })\n              }\n            </div>\n            {/*<div className=\"label\">\n              {i === 0 && <span className=\"label\">GAME OVER</span>}\n              {i   > 0 && <span className=\"label\">Lives {`${i}`}  / {maxLives}</span>}\n            </div>*/}\n          </div>\n        </div>\n      );\n    });\n\n    return slides;\n  }\n\n  starsPanes() {\n    let numSlides = Math.max(Mind.maxStars(this.props.mind.level) - - 1 || 0, this.props.mind.stars);\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"stars\"+i}>\n          <div className=\"row stars\">\n            <div className=\"images\" style={{ maxWidth: (i*90)+\"px\" }}>\n              {\n                i > 0 && Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <div key={\"star\"+i+j}><img className=\"star\" src=\"img/star.png\" alt={\"Star #\"+(j - -1)} /></div> );\n                })\n              }\n              {i === 0 && <div><img key={\"star-empty\"} className=\"starEmpty\" src=\"img/star_bw.png\" alt=\"0 Stars\" /></div> }\n            </div>\n            {/*<div className=\"label\">Stars {i} / {Mind.maxStars(this.props.mind.level)}</div>*/}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const prev = prevProps.mind;\n    const curr = this.props.mind;\n\n    // If our level changed, we may need to increase lives or stars\n    if(prev.level !== curr.level) {\n      const prevMaxLives = Mind.maxLives(prev.playerCount, prev.level);\n      const currMaxLives = Mind.maxLives(curr.playerCount, curr.level);\n\n      if(prevMaxLives !== currMaxLives) {\n        const diffLives = prevMaxLives - currMaxLives;\n        const newLivesPos = this.livesSwipe.getPos() - diffLives;\n\n        // FIXME: Timing bug\n        const self = this;\n        setTimeout(function() {\n          // we allow undoing level gains, but loss can only be triggered by direct user action\n          if(newLivesPos > 0 && curr.gameState === \"active\") {\n            self.livesSwipe.slide(newLivesPos, SLIDE_SPEED);\n          }\n        }, 0);\n      }\n\n      else {\n        const prevMaxStars = Mind.maxStars(prev.level);\n        const currMaxStars = Mind.maxStars(curr.level);\n\n        if(prevMaxStars !== currMaxStars) {\n          const diffStars = prevMaxStars - currMaxStars;\n          var newStarsPos = this.starsSwipe.getPos() - diffStars;\n\n          // FIXME: Timing bug\n          const self = this;\n          setTimeout(function() {\n            self.starsSwipe.slide(newStarsPos, SLIDE_SPEED);\n          }, 0);\n        }\n      }\n    }\n\n    // Start or stop fireworks if win state changed\n    if(prev.gameState !== curr.gameState) {\n      if(prev.gameState === \"win\") {\n        fireworks.stop();\n      } else if(curr.gameState === \"win\") {\n        fireworks.start();\n      }\n    }\n\n    localStorage.setItem(\"mind\", JSON.stringify(curr));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Uncomment to debug */}\n        {/*\n          <pre>{ JSON.stringify(this.props) }</pre>\n        */}\n\n        <div id=\"preWrap\" className={this.props.mind.gameState === \"pre\" ? \"\" : \"hidden\"}>\n          <div id=\"playerCountSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.playerCountSwipe = reactSwipe)}\n              childCount={this.playerCountPanes().length}\n              className=\"playerCountSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.playerCount - 2,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => this.props.setPlayerCount(num - - 2)\n              }}\n            >\n              {this.playerCountPanes()}\n            </ReactSwipe>\n            <div id=\"playerCountSubtitle\" className=\"subtitle\">Levels 1 - {Mind.maxLevel(this.props.mind.playerCount)}</div>\n            <button\n              id=\"startButton\"\n              onClick={(e) => this.props.setGameState(\"active\")}\n              className={this.props.mind.gameState === \"pre\" ? \"visible\" : \"\"}\n            >\n              <span>Start Game</span>\n            </button>\n          </div>\n        </div>\n        {/* end #preWrap */}\n\n        <div id=\"activeWrap\" className={this.props.mind.gameState === \"pre\" ? \"hidden\" : \"\"}>\n\n          {/*<div id=\"playerCountDisplay\">{Mind.numWord(this.props.mind.playerCount)} Players</div>*/}\n\n          <div id=\"levelSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.levelSwipe = reactSwipe)}\n              childCount={this.levelPanes().length}\n              className=\"levelSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide:\n                  this.props.mind.gameState === \"win\"\n                  ? this.props.mind.level\n                  : this.props.mind.level - 1,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  const maxLevel = Mind.maxLevel(this.props.mind.playerCount);\n                  if(num - - 1 > maxLevel) {\n                    this.props.setGameState(\"win\");\n                    // fireworks.start();\n                  } else if(this.props.mind.gameState === \"win\" && num < maxLevel) {\n                      this.props.setGameState(\"active\")\n                      // fireworks.stop();\n                  } else {\n                    this.props.setLevel(num - - 1);\n                  }\n                },\n              }}\n            >\n              {this.levelPanes()}\n            </ReactSwipe>\n            {/*<div id=\"levelSwipeSubtitle\" className=\"subtitle\">{this.props.mind.playerCount}P: Levels 1-{Mind.maxLevel(this.props.mind.playerCount)}</div>*/}\n            <div id=\"levelSwipeSubtitle\" className={this.props.mind.gameState === \"active\" ? \"subtitle\" : \"hidden\"}>{this.props.mind.level === Mind.maxLevel(this.props.mind.playerCount) && <div>Final Level!</div>}Deal {Mind.numWord(this.props.mind.level)} To Each Player</div>\n          </div>\n          {/* end #levelSwipeWrap */}\n\n          <div id=\"livesSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.livesSwipe = reactSwipe)}\n              childCount={this.livesPanes().length}\n              className={this.props.mind.gameState === \"active\" ? \"livesSwipe\" : \"livesSwipe inactive\"}\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.lives,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setLives(num);\n                }\n              }}\n            >\n              {this.livesPanes()}\n            </ReactSwipe>\n            <div className=\"label\">\n              {this.props.mind.lives === 0 && <span>GAME OVER</span>}\n              {this.props.mind.lives   > 0 && <span>Lives {this.props.mind.lives}  / {Mind.maxLives(this.props.mind.playerCount, this.props.mind.level)}</span>}\n            </div>\n          </div>\n          {/* end #livesSwipeWrap */}\n\n          <div id=\"starsSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.starsSwipe = reactSwipe)}\n              childCount={this.starsPanes().length}\n              className={this.props.mind.gameState === \"active\" ? \"starsSwipe\" : \"starsSwipe hidden\"}\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.stars,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setStars(num);\n                },\n              }}\n            >\n              {this.starsPanes()}\n            </ReactSwipe>\n            <div className={this.props.mind.gameState === \"active\" ? \"label\" : \"hidden\"}>Stars {this.props.mind.stars} / {Mind.maxStars(this.props.mind.level)}</div>\n\n            <button\n              id=\"newGameButton\"\n              onClick={(e) => this.props.setGameState(\"pre\")}\n              className={this.props.mind.gameState === \"win\" || this.props.mind.gameState === \"loss\" ? \"\" : \"hidden\"}\n            >\n              <span>New Game</span>\n            </button>\n\n          </div>\n          {/* end #starsSwipeWrap */}\n\n        </div>\n        {/* end #activeWrap */}\n\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setLevel = (level) => dispatch => {\n  dispatch({\n    type: 'SET_LEVEL',\n    payload: { 'level': level },\n  })\n}\n","export const setLives = (lives) => dispatch => {\n  dispatch({\n    type: 'SET_LIVES',\n    payload: { 'lives': lives },\n  })\n}\n","export const setStars = (stars) => dispatch => {\n  dispatch({\n    type: 'SET_STARS',\n    payload: { 'stars': stars },\n  })\n}\n","export const setPlayerCount = (playerCount) => dispatch => {\n  dispatch({\n    type: 'SET_PLAYER_COUNT',\n    payload: { 'playerCount': playerCount },\n  })\n}\n","export const setGameState = (gameState) => dispatch => {\n  dispatch({\n    type: 'SET_GAME_STATE',\n    payload: { 'gameState': gameState },\n  })\n}\n","const INIT_STATE = {\n  playerCount: 2,\n  level: 1,\n  lives: 2,\n  stars: 1,\n  gameState: 'pre', // pre, active, win, loss\n  // gameState: 'active', // pre, active, win, loss\n}\n\nconst STORAGE_STATE = JSON.parse(localStorage.getItem(\"mind\", \"false\"));\n\nexport default (state = STORAGE_STATE || INIT_STATE, action) => {\n  switch(action.type) {\n    case 'SET_PLAYER_COUNT':\n      return Object.assign({}, state, {\n        playerCount: action.payload.playerCount,\n        lives:       action.payload.playerCount,\n      })\n    case 'SET_LEVEL':\n      return Object.assign({}, state, {\n        level: action.payload.level,\n        gameState: action.payload.level > (16 - (state.playerCount * 2)) // TODO: access maxLevel in scope\n          ? \"win\"\n          : \"active\"\n      });\n    case 'SET_LIVES':\n      return Object.assign({}, state, {\n        lives: action.payload.lives,\n        gameState: action.payload.lives > 0 && state.gameState !== \"win\"\n          ? \"active\"\n          : \"loss\"\n      })\n    case 'SET_STARS':\n      return Object.assign({}, state, {\n        stars: action.payload.stars\n      });\n    case 'SET_GAME_STATE':\n      // Reset to new game if requested\n      const baseState = state.gameState !== \"pre\" && action.payload.gameState === \"pre\"\n        ? INIT_STATE\n        : state;\n      return Object.assign({}, baseState, {\n        gameState: action.payload.gameState\n      });\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport mind from './mindReducer';\n\nexport default combineReducers({\n mind\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport { Provider }       from 'react-redux';\nimport App                from './App';\nimport configureStore     from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}