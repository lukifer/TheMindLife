{"version":3,"sources":["Mind.js","fireworks.js","App.js","actions/setLevel.js","actions/setLives.js","actions/setStars.js","actions/setPlayerCount.js","actions/setGameState.js","reducers/mindReducer.js","reducers/rootReducer.js","serviceWorker.js","index.js","store.js"],"names":["GAIN_LIVES_AT_LEVEL","GAIN_STARS_AT_LEVEL","src_Mind","playerCount","curLevel","this","startingLives","extraLives","reduce","lives","lvl","stars","SCREEN_HEIGHT","window","innerWidth","innerHeight","particles","Particle","pos","x","y","vel","shrink","size","resistance","gravity","flick","alpha","fade","color","Rocket","apply","explosionColor","prototype","update","render","c","exists","save","globalCompositeOperation","r","gradient","createRadialGradient","addColorStop","fillStyle","beginPath","arc","Math","random","PI","closePath","fill","restore","constructor","explode","count","i","particle","angle","speed","cos","sin","push","App","map","num","react_default","a","createElement","key","className","concat","maxLevel","Mind","props","mind","numSlides","Array","_","maxLives","level","max","style","maxWidth","src","alt","j","_this","maxStars","prevProps","prevState","snapshot","prev","curr","prevMaxLives","currMaxLives","diffLives","newLivesPos","livesSwipe","getPos","self","setTimeout","gameState","slide","prevMaxStars","currMaxStars","diffStars","newStarsPos","starsSwipe","localStorage","setItem","JSON","stringify","_this2","id","lib_default","ref","reactSwipe","playerCountSwipe","childCount","playerCountPanes","length","swipeOptions","continuous","startSlide","callback","div","swiping","fraction","transitionEnd","setPlayerCount","onClick","e","setGameState","levelSwipe","levelPanes","setLevel","livesPanes","setLives","starsPanes","setStars","Component","connect","state","Object","objectSpread","dispatch","type","payload","INIT_STATE","STORAGE_STATE","parse","getItem","combineReducers","arguments","undefined","action","assign","baseState","Boolean","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAGMA,EAAsB,CAAC,EAAG,EAAG,GAC7BC,EAAsB,CAAC,EAAG,EAAG,GAoCpBC,EAAA,qGAhCJC,GACP,OAAOA,GACL,KAAK,EAAI,OAAO,EAChB,KAAK,EAAI,OAAO,GAChB,KAAK,EACL,QAAS,OAAO,0CAINA,GACZ,OAAOA,mCAGAA,EAAaC,GACpB,OAAOC,KAAKC,cAAcH,KAAiBE,KAAKE,WAAWH,sCAGlDA,GACT,OAAOJ,EAAoBQ,OAAO,SAACC,EAAOC,GACxC,OAAGN,GAAYM,EAAYD,EAAQ,EAC5BA,GACN,oCAGIL,GACP,OAAOH,EAAoBO,OAAO,SAACG,EAAOD,GACxC,OAAGN,GAAYM,EAAYC,EAAQ,EAC5BA,GAjCU,aCCnBC,GADeC,OAAOC,WACND,OAAOE,aAavBC,EAAY,GAoHhB,SAASC,EAASC,GACdb,KAAKa,IAAM,CACPC,EAAGD,EAAMA,EAAIC,EAAI,EACjBC,EAAGF,EAAMA,EAAIE,EAAI,GAErBf,KAAKgB,IAAM,CACPF,EAAG,EACHC,EAAG,GAEPf,KAAKiB,OAAS,IACdjB,KAAKkB,KAAO,EAEZlB,KAAKmB,WAAa,EAClBnB,KAAKoB,QAAU,EAEfpB,KAAKqB,OAAQ,EAEbrB,KAAKsB,MAAQ,EACbtB,KAAKuB,KAAO,EACZvB,KAAKwB,MAAQ,EAsDjB,SAASC,EAAOX,GACZF,EAASc,MAAM1B,KAAM,CAAC,CAClBc,EAAGA,EACHC,EAAGR,KAEPP,KAAK2B,eAAiB,EAxD1Bf,EAASgB,UAAUC,OAAS,WAExB7B,KAAKgB,IAAIF,GAAKd,KAAKmB,WACnBnB,KAAKgB,IAAID,GAAKf,KAAKmB,WAGnBnB,KAAKgB,IAAID,GAAKf,KAAKoB,QAGnBpB,KAAKa,IAAIC,GAAKd,KAAKgB,IAAIF,EACvBd,KAAKa,IAAIE,GAAKf,KAAKgB,IAAID,EAGvBf,KAAKkB,MAAQlB,KAAKiB,OAGlBjB,KAAKsB,OAAStB,KAAKuB,MAGvBX,EAASgB,UAAUE,OAAS,SAASC,GACjC,GAAK/B,KAAKgC,SAAV,CAIAD,EAAEE,OAEFF,EAAEG,yBAA2B,UAE7B,IAAIpB,EAAId,KAAKa,IAAIC,EACbC,EAAIf,KAAKa,IAAIE,EACboB,EAAInC,KAAKkB,KAAO,EAEhBkB,EAAWL,EAAEM,qBAAqBvB,EAAGC,EAAG,GAAKD,EAAGC,EAAGoB,GACvDC,EAASE,aAAa,GAAK,oBAAsBtC,KAAKsB,MAAQ,KAC9Dc,EAASE,aAAa,GAAK,QAAUtC,KAAKwB,MAAQ,gBAAkBxB,KAAKsB,MAAQ,KACjFc,EAASE,aAAa,EAAG,QAAUtC,KAAKwB,MAAQ,qBAEhDO,EAAEQ,UAAYH,EAEdL,EAAES,YACFT,EAAEU,IAAIzC,KAAKa,IAAIC,EAAGd,KAAKa,IAAIE,EAAGf,KAAKqB,MAAQqB,KAAKC,SAAW3C,KAAKkB,KAAOlB,KAAKkB,KAAM,EAAa,EAAVwB,KAAKE,IAAQ,GAClGb,EAAEc,YACFd,EAAEe,OAEFf,EAAEgB,YAGNnC,EAASgB,UAAUI,OAAS,WACxB,OAAOhC,KAAKsB,OAAS,IAAOtB,KAAKkB,MAAQ,GAW7CO,EAAOG,UAAY,IAAIhB,EACvBa,EAAOG,UAAUoB,YAAcvB,EAE/BA,EAAOG,UAAUqB,QAAU,WAGvB,IAFA,IAAIC,EAAwB,GAAhBR,KAAKC,SAAgB,GAExBQ,EAAI,EAAGA,EAAID,EAAOC,IAAK,CAC5B,IAAIC,EAAW,IAAIxC,EAASZ,KAAKa,KAC7BwC,EAAQX,KAAKC,SAAWD,KAAKE,GAAK,EAGlCU,EAAgD,GAAxCZ,KAAKa,IAAIb,KAAKC,SAAWD,KAAKE,GAAK,GAE/CQ,EAASpC,IAAIF,EAAI4B,KAAKa,IAAIF,GAASC,EACnCF,EAASpC,IAAID,EAAI2B,KAAKc,IAAIH,GAASC,EAEnCF,EAASlC,KAAO,GAEhBkC,EAAShC,QAAU,GACnBgC,EAASjC,WAAa,IACtBiC,EAASnC,OAAyB,IAAhByB,KAAKC,SAAkB,IAEzCS,EAAS/B,OAAQ,EACjB+B,EAAS5B,MAAQxB,KAAK2B,eAEtBhB,EAAU8C,KAAKL,KAIvB3B,EAAOG,UAAUE,OAAS,SAASC,GAC/B,GAAK/B,KAAKgC,SAAV,CAIAD,EAAEE,OAEFF,EAAEG,yBAA2B,UAE7B,IAAIpB,EAAId,KAAKa,IAAIC,EACbC,EAAIf,KAAKa,IAAIE,EACboB,EAAInC,KAAKkB,KAAO,EAEhBkB,EAAWL,EAAEM,qBAAqBvB,EAAGC,EAAG,GAAKD,EAAGC,EAAGoB,GACvDC,EAASE,aAAa,GAAK,uBAAyBtC,KAAKsB,MAAQ,KACjEc,EAASE,aAAa,EAAG,iBAAmBtC,KAAKsB,MAAQ,KAEzDS,EAAEQ,UAAYH,EAEdL,EAAES,YACFT,EAAEU,IAAIzC,KAAKa,IAAIC,EAAGd,KAAKa,IAAIE,EAAGf,KAAKqB,MAAQqB,KAAKC,SAAW3C,KAAKkB,KAAO,EAAIlB,KAAKkB,KAAO,EAAIlB,KAAKkB,KAAM,EAAa,EAAVwB,KAAKE,IAAQ,GACtHb,EAAEc,YACFd,EAAEe,OAEFf,EAAEgB,kBAMS,ICpPTW,6LAQF,MADmB,CAAC,EAAG,EAAG,GACRC,IAAI,SAACC,EAAKT,GAC1B,OACEU,EAAAC,EAAAC,cAAA,OAAKC,IAAK,cAAcb,GACtBU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAUbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,GAAAC,OAA2BN,GAA3B,qDAQR,IAAMO,EAAWC,EAAKD,SAASnE,KAAKqE,MAAMC,KAAKxE,aACzCyE,EAAYJ,IAAa,EAE/B,OAAOK,MAAM9C,MAAM,KAAM8C,MAAMD,IAAYZ,IAAI,SAACc,EAAGtB,GACjD,OACEU,EAAAC,EAAAC,cAAA,OAAKC,IAAK,QAAQb,GAChBU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAEZd,IAAM,GAAKgB,GAAYN,EAAAC,EAAAC,cAAA,qBAAaZ,IAAM,GAC1CA,IAAM,EAAKgB,GAAYN,EAAAC,EAAAC,cAAA,iEAUlC,IAAMW,EAAWN,EAAKM,SAAS1E,KAAKqE,MAAMC,KAAKxE,YAAaE,KAAKqE,MAAMC,KAAKK,QAAU,EAChFJ,EAAY7B,KAAKkC,IAAIF,EAAU1E,KAAKqE,MAAMC,KAAKlE,SAAW,EAuBhE,OArBaoE,MAAM9C,MAAM,KAAM8C,MAAMD,IAAYZ,IAAI,SAACc,EAAGtB,GACvD,OACEU,EAAAC,EAAAC,cAAA,OAAKC,IAAK,QAAQb,GAChBU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASY,MAAO,CAAEC,SAAa,GAAF3B,EAAM,OACzC,IAANA,GAAWU,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,IAAK,aAAcC,UAAU,kBAAkBc,IAAI,qBAAqBC,IAAI,eACjG7B,EAAM,GACLqB,MAAM9C,MAAM,KAAM8C,MAAMrB,IAAIQ,IAAI,SAACc,EAAGQ,GAClC,OAASpB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,IAAK,QAAQb,EAAE8B,EAAGhB,UAAU,QAAQc,IAAI,gBAAgBC,IAAK,UAAUC,IAAK,SAIrGpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACN,IAANd,GAAWU,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,aACXd,EAAM,GAAKU,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,YAAAC,OAAkCf,GAAlC,OAA2CuB,6CAUtD,IAAAQ,EAAAlF,KACPuE,EAAY7B,KAAKkC,IAAIR,EAAKe,SAASnF,KAAKqE,MAAMC,KAAKK,SAAW,GAAK,EAAG3E,KAAKqE,MAAMC,KAAKhE,OAC1F,OAAOkE,MAAM9C,MAAM,KAAM8C,MAAMD,IAAYZ,IAAI,SAACc,EAAGtB,GACjD,OACEU,EAAAC,EAAAC,cAAA,OAAKC,IAAK,QAAQb,GAChBU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASY,MAAO,CAAEC,SAAa,GAAF3B,EAAM,OAE9CA,EAAI,GAAKqB,MAAM9C,MAAM,KAAM8C,MAAMrB,IAAIQ,IAAI,SAACc,EAAGQ,GAC3C,OAASpB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,IAAK,OAAOb,EAAE8B,EAAGhB,UAAU,OAAOc,IAAI,eAAeC,IAAK,UAAUC,IAAK,QAGzF,IAAN9B,GAAWU,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,IAAK,aAAcC,UAAU,YAAYc,IAAI,kBAAkBC,IAAI,cAE3FnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,SAA8Bd,EAA9B,MAAoCiB,EAAKe,SAASD,EAAKb,MAAMC,KAAKK,uDAOzDS,EAAWC,EAAWC,GACvC,IAAMC,EAAOH,EAAUd,KACjBkB,EAAOxF,KAAKqE,MAAMC,KAGxB,GAAGiB,EAAKZ,QAAUa,EAAKb,MAAO,CAC5B,IAAMc,EAAerB,EAAKM,SAASa,EAAKzF,YAAayF,EAAKZ,OACpDe,EAAetB,EAAKM,SAASc,EAAK1F,YAAa0F,EAAKb,OAE1D,GAAGc,IAAiBC,EAAc,CAChC,IAAMC,EAAYF,EAAeC,EAC3BE,EAAc5F,KAAK6F,WAAWC,SAAWH,EAGzCI,EAAO/F,KACbgG,WAAW,WAENJ,EAAc,GAAwB,WAAnBJ,EAAKS,WACzBF,EAAKF,WAAWK,MAAMN,EAjId,MAmIT,OAGA,CACH,IAAMO,EAAe/B,EAAKe,SAASI,EAAKZ,OAClCyB,EAAehC,EAAKe,SAASK,EAAKb,OAExC,GAAGwB,IAAiBC,EAAc,CAChC,IAAMC,EAAYF,EAAeC,EAC7BE,EAActG,KAAKuG,WAAWT,SAAWO,EAGvCN,EAAO/F,KACbgG,WAAW,WACTD,EAAKQ,WAAWL,MAAMI,EAjJd,MAkJP,KAITE,aAAaC,QAAQ,OAAQC,KAAKC,UAAUnB,qCAGrC,IAAAoB,EAAA5G,KACP,OACE6D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAMbJ,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,UAAU5C,UAAyC,QAA9BjE,KAAKqE,MAAMC,KAAK2B,UAAsB,GAAK,UACtEpC,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,uBAAuB5C,UAAU,kBACvCJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,IAAK,SAAAC,GAAU,OAAKJ,EAAKK,iBAAmBD,GAC5CE,WAAYlH,KAAKmH,mBAAmBC,OACpCnD,UAAU,mBACVoD,aAAc,CACZC,YAAY,EACZC,WAAYvH,KAAKqE,MAAMC,KAAKxE,YAAc,EAC1C0H,SAAU,SAAC5D,EAAK6D,KAChBC,QAAS,SAACC,KACVC,cAAe,SAAChE,EAAK6D,GAAN,OAAcb,EAAKvC,MAAMwD,eAAejE,IAAQ,MAGhE5D,KAAKmH,oBAERtD,EAAAC,EAAAC,cAAA,UACE8C,GAAG,cACHiB,QAAS,SAACC,GAAD,OAAOnB,EAAKvC,MAAM2D,aAAa,WACxC/D,UAAyC,QAA9BjE,KAAKqE,MAAMC,KAAK2B,UAAsB,UAAY,IAE7DpC,EAAAC,EAAAC,cAAA,6BAMNF,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,aAAa5C,UAAyC,QAA9BjE,KAAKqE,MAAMC,KAAK2B,UAAsB,SAAW,IAE/EpC,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,sBAAsB7G,KAAKqE,MAAMC,KAAKxE,YAA9C,YAEA+D,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,iBAAiB5C,UAAU,kBACjCJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,IAAK,SAAAC,GAAU,OAAKJ,EAAKqB,WAAajB,GACtCE,WAAYlH,KAAKkI,aAAad,OAC9BnD,UAAU,aACVoD,aAAc,CACZC,YAAY,EACZC,WAAYvH,KAAKqE,MAAMC,KAAKK,MAAQ,EACpC6C,SAAU,SAAC5D,EAAK6D,KAChBC,QAAS,SAACC,KACVC,cAAe,SAAChE,EAAK6D,GAEnBb,EAAKvC,MAAM8D,SAASvE,IAAQ,GAGzBA,IAAQ,EADMQ,EAAKD,SAASyC,EAAKvC,MAAMC,KAAKxE,cAE7C8G,EAAKvC,MAAM2D,aAAa,UAM7BhI,KAAKkI,eAKVrE,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,iBAAiB5C,UAAU,kBACjCJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,IAAK,SAAAC,GAAU,OAAKJ,EAAKf,WAAamB,GACtCE,WAAYlH,KAAKoI,aAAahB,OAC9BnD,UAAyC,WAA9BjE,KAAKqE,MAAMC,KAAK2B,UAAyB,aAAe,sBACnEoB,aAAc,CACZC,YAAY,EACZC,WAAYvH,KAAKqE,MAAMC,KAAKlE,MAC5BoH,SAAU,SAAC5D,EAAK6D,KAChBC,QAAS,SAACC,KACVC,cAAe,SAAChE,EAAK6D,GACnBb,EAAKvC,MAAMgE,SAASzE,MAIvB5D,KAAKoI,eAKVvE,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,iBAAiB5C,UAAU,kBACjCJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,IAAK,SAAAC,GAAU,OAAKJ,EAAKL,WAAaS,GACtCE,WAAYlH,KAAKsI,aAAalB,OAC9BnD,UAAyC,WAA9BjE,KAAKqE,MAAMC,KAAK2B,UAAyB,aAAe,oBACnEoB,aAAc,CACZC,YAAY,EACZC,WAAYvH,KAAKqE,MAAMC,KAAKhE,MAC5BkH,SAAU,SAAC5D,EAAK6D,KAChBC,QAAS,SAACC,KACVC,cAAe,SAAChE,EAAK6D,GACnBb,EAAKvC,MAAMkE,SAAS3E,MAIvB5D,KAAKsI,cAGRzE,EAAAC,EAAAC,cAAA,UACE8C,GAAG,gBACHiB,QAAS,SAACC,GAAD,OAAOnB,EAAKvC,MAAM2D,aAAa,QACxC/D,UAAyC,QAA9BjE,KAAKqE,MAAMC,KAAK2B,WAAqD,SAA9BjG,KAAKqE,MAAMC,KAAK2B,UAAuB,GAAK,UAE9FpC,EAAAC,EAAAC,cAAA,mCAxPIyE,aAsQHC,cAlRS,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACxBD,IAGsB,SAAAG,GAAQ,MAAK,CACtCV,SAAgB,SAACxD,GAAD,OAAiBkE,ECrBX,SAAClE,GAAD,OAAW,SAAAkE,GACjCA,EAAS,CACPC,KAAM,YACNC,QAAS,CAAEpE,MAASA,MDkBoBwD,CAASxD,KACnD0D,SAAgB,SAACjI,GAAD,OAAiByI,EEtBX,SAACzI,GAAD,OAAW,SAAAyI,GACjCA,EAAS,CACPC,KAAM,YACNC,QAAS,CAAE3I,MAASA,MFmBoBiI,CAASjI,KACnDmI,SAAgB,SAACjI,GAAD,OAAiBuI,EGvBX,SAACvI,GAAD,OAAW,SAAAuI,GACjCA,EAAS,CACPC,KAAM,YACNC,QAAS,CAAEzI,MAASA,MHoBoBiI,CAASjI,KACnDuH,eAAgB,SAAC/H,GAAD,OAAiB+I,EIxBL,SAAC/I,GAAD,OAAiB,SAAA+I,GAC7CA,EAAS,CACPC,KAAM,mBACNC,QAAS,CAAEjJ,YAAeA,MJqBc+H,CAAe/H,KACzDkI,aAAgB,SAAC/B,GAAD,OAAiB4C,EKzBP,SAAC5C,GAAD,OAAe,SAAA4C,GACzCA,EAAS,CACPC,KAAM,iBACNC,QAAS,CAAE9C,UAAaA,MLsBgB+B,CAAa/B,OAyQ1CwC,CAA6C/E,kBMlStDsF,EAAa,CACjBlJ,YAAa,EACb6E,MAAO,EACPvE,MAAO,EACPE,MAAO,EACP2F,UAAW,OAIPgD,EAAgBvC,KAAKwC,MAAM1C,aAAa2C,QAAQ,OAAQ,UCN/CC,cAAgB,CAC9B9E,KDOc,WAAiD,IAAhDoE,EAAgDW,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAxCJ,GAAiBD,EAAYO,EAAWF,UAAAjC,OAAA,EAAAiC,UAAA,QAAAC,EAC9D,OAAOC,EAAOT,MACZ,IAAK,mBACH,OAAOH,OAAOa,OAAO,GAAId,EAAO,CAC9B5I,YAAayJ,EAAOR,QAAQjJ,YAC5BM,MAAamJ,EAAOR,QAAQjJ,cAEhC,IAAK,YACH,OAAO6I,OAAOa,OAAO,GAAId,EAAO,CAC9B/D,MAAO4E,EAAOR,QAAQpE,MACtBsB,UAAWsD,EAAOR,QAAQpE,MAAS,GAA0B,EAApB+D,EAAM5I,YAC3C,MACA,WAER,IAAK,YACH,OAAO6I,OAAOa,OAAO,GAAId,EAAO,CAC9BtI,MAAOmJ,EAAOR,QAAQ3I,MACtB6F,UAAWsD,EAAOR,QAAQ3I,MAAQ,GAAyB,QAApBsI,EAAMzC,UACzC,SACA,SAER,IAAK,YACH,OAAO0C,OAAOa,OAAO,GAAId,EAAO,CAC9BpI,MAAOiJ,EAAOR,QAAQzI,QAE1B,IAAK,iBAEH,IAAMmJ,EAAgC,QAApBf,EAAMzC,WAAoD,QAA7BsD,EAAOR,QAAQ9C,UAC1D+C,EACAN,EACJ,OAAOC,OAAOa,OAAO,GAAIC,EAAW,CAClCxD,UAAWsD,EAAOR,QAAQ9C,YAE9B,QACE,OAAOyC,MEjCOgB,QACW,cAA7BlJ,OAAOmJ,SAASC,UAEe,UAA7BpJ,OAAOmJ,SAASC,UAEhBpJ,OAAOmJ,SAASC,SAASC,MACvB,qECTAC,ECLS,WACb,OADsDT,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,IAAAA,UAAA,GAC/CU,YACLC,EACAC,YAAgBC,MDENC,GAEdC,IAAStI,OACP+B,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAUP,MAAOA,GACfjG,EAAAC,EAAAC,cAACuG,EAAD,OAEFC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d47265e4.chunk.js","sourcesContent":["// Lightweight wrapper class for game logic\n\nconst STARTING_STARS = 1;\nconst GAIN_LIVES_AT_LEVEL = [3, 6, 9];\nconst GAIN_STARS_AT_LEVEL = [2, 5, 8];\n\nclass Mind {\n\n  maxLevel(playerCount) {\n    switch(playerCount) {\n      case 4:  return 8;\n      case 3:  return 10;\n      case 2:  return 12;\n      default: return 12;\n    }\n  }\n\n  startingLives(playerCount) {\n    return playerCount; // begin with 1 life per player\n  }\n\n  maxLives(playerCount, curLevel) {\n    return this.startingLives(playerCount) - - this.extraLives(curLevel);\n  }\n\n  extraLives(curLevel) {\n    return GAIN_LIVES_AT_LEVEL.reduce((lives, lvl) => {\n      if(curLevel >= lvl) return lives + 1;\n      return lives;\n    }, 0);\n  }\n\n  maxStars(curLevel) {\n    return GAIN_STARS_AT_LEVEL.reduce((stars, lvl) => {\n      if(curLevel >= lvl) return stars + 1;\n      return stars;\n    }, STARTING_STARS);\n  }\n}\n\nexport default new Mind();\n\n//export default connect(mapStateToProps, mapDispatchToProps)(App);\n","//https://jsfiddle.net/dtrooper/AceJJ/\n\nvar SCREEN_WIDTH = window.innerWidth,\n    SCREEN_HEIGHT = window.innerHeight,\n    // mousePos = {\n    //     x: 400,\n    //     y: 300\n    // },\n\n    // create canvas\n    //canvas = document.createElement('canvas'),\n    canvas,\n    //context = canvas.getContext('2d'),\n    context,\n    launchInterval,\n    loopInterval,\n    particles = [],\n    rockets = [],\n    MAX_PARTICLES = 400;\n\n    // canvas.width = SCREEN_WIDTH;\n    // canvas.height = SCREEN_HEIGHT;\n\n// init\n// $(document).ready(function() {\n//     //document.body.appendChild(canvas);\n//     canvas.width = SCREEN_WIDTH;\n//     canvas.height = SCREEN_HEIGHT;\n//     // setInterval(launch, 800);\n//     // setInterval(loop, 1000 / 50);\n// });\n\n// update mouse position\n// $(document).mousemove(function(e) {\n//     e.preventDefault();\n//     mousePos = {\n//         x: e.clientX,\n//         y: e.clientY\n//     };\n// });\n\n// launch more rockets!!!\n// $(document).mousedown(function(e) {\n//     for (var i = 0; i < 5; i++) {\n//         launchFrom(Math.random() * SCREEN_WIDTH * 2 / 3 + SCREEN_WIDTH / 6);\n//     }\n// });\n\n// function launch() {\n//     launchFrom(mousePos.x);\n// }\n\nfunction launchFrom(x) {\n    if (rockets.length < 10) {\n        var rocket = new Rocket(x);\n        rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\n        rocket.vel.y = Math.random() * -3 - 4;\n        rocket.vel.x = Math.random() * 6 - 3;\n        rocket.size = 8;\n        rocket.shrink = 0.999;\n        rocket.gravity = 0.01;\n        rockets.push(rocket);\n    }\n}\n\nfunction loop() {\n    // update screen size\n    // if (SCREEN_WIDTH != window.innerWidth) {\n    //     canvas.width = SCREEN_WIDTH = window.innerWidth;\n    // }\n    // if (SCREEN_HEIGHT != window.innerHeight) {\n    //     canvas.height = SCREEN_HEIGHT = window.innerHeight;\n    // }\n\n    // clear canvas\n    context.fillStyle = \"rgba(0, 0, 0, 0.001)\";\n    context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    var mousePos = {\n      x: parseInt(Math.random() * SCREEN_WIDTH),\n      y: parseInt(Math.random() * SCREEN_HEIGHT),\n    };\n\n    var existingRockets = [];\n\n    var i;\n    for (i = 0; i < rockets.length; i++) {\n        // update and render\n        rockets[i].update();\n        rockets[i].render(context);\n\n        // calculate distance with Pythagoras\n        var distance = Math.sqrt(Math.pow(mousePos.x - rockets[i].pos.x, 2) + Math.pow(mousePos.y - rockets[i].pos.y, 2));\n\n        // random chance of 1% if rockets is above the middle\n        var randomChance = rockets[i].pos.y < (SCREEN_HEIGHT * 2 / 3) ? (Math.random() * 100 <= 1) : false;\n\n/* Explosion rules\n             - 80% of screen\n            - going down\n            - close to the mouse\n            - 1% chance of random explosion\n        */\n        if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\n            rockets[i].explode();\n        } else {\n            existingRockets.push(rockets[i]);\n        }\n    }\n\n    rockets = existingRockets;\n\n    var existingParticles = [];\n\n    for (i = 0; i < particles.length; i++) {\n        particles[i].update();\n\n        // render and save particles that can be rendered\n        if (particles[i].exists()) {\n            particles[i].render(context);\n            existingParticles.push(particles[i]);\n        }\n    }\n\n    // update array with existing particles - old particles should be garbage collected\n    particles = existingParticles;\n\n    while (particles.length > MAX_PARTICLES) {\n        particles.shift();\n    }\n}\n\nfunction Particle(pos) {\n    this.pos = {\n        x: pos ? pos.x : 0,\n        y: pos ? pos.y : 0\n    };\n    this.vel = {\n        x: 0,\n        y: 0\n    };\n    this.shrink = .97;\n    this.size = 2;\n\n    this.resistance = 1;\n    this.gravity = 0;\n\n    this.flick = false;\n\n    this.alpha = 1;\n    this.fade = 0;\n    this.color = 0;\n}\n\nParticle.prototype.update = function() {\n    // apply resistance\n    this.vel.x *= this.resistance;\n    this.vel.y *= this.resistance;\n\n    // gravity down\n    this.vel.y += this.gravity;\n\n    // update position based on speed\n    this.pos.x += this.vel.x;\n    this.pos.y += this.vel.y;\n\n    // shrink\n    this.size *= this.shrink;\n\n    // fade out\n    this.alpha -= this.fade;\n};\n\nParticle.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\nParticle.prototype.exists = function() {\n    return this.alpha >= 0.1 && this.size >= 1;\n};\n\nfunction Rocket(x) {\n    Particle.apply(this, [{\n        x: x,\n        y: SCREEN_HEIGHT}]);\n\n    this.explosionColor = 0;\n}\n\nRocket.prototype = new Particle();\nRocket.prototype.constructor = Rocket;\n\nRocket.prototype.explode = function() {\n    var count = Math.random() * 10 + 80;\n\n    for (var i = 0; i < count; i++) {\n        var particle = new Particle(this.pos);\n        var angle = Math.random() * Math.PI * 2;\n\n        // emulate 3D effect by using cosine and put more particles in the middle\n        var speed = Math.cos(Math.random() * Math.PI / 2) * 15;\n\n        particle.vel.x = Math.cos(angle) * speed;\n        particle.vel.y = Math.sin(angle) * speed;\n\n        particle.size = 10;\n\n        particle.gravity = 0.2;\n        particle.resistance = 0.92;\n        particle.shrink = Math.random() * 0.05 + 0.93;\n\n        particle.flick = true;\n        particle.color = this.explosionColor;\n\n        particles.push(particle);\n    }\n};\n\nRocket.prototype.render = function(c) {\n    if (!this.exists()) {\n        return;\n    }\n\n    c.save();\n\n    c.globalCompositeOperation = 'lighter';\n\n    var x = this.pos.x,\n        y = this.pos.y,\n        r = this.size / 2;\n\n    var gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\n\n    c.fillStyle = gradient;\n\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n\n    c.restore();\n};\n\n// setInterval(launch, 800);\n// setInterval(loop, 1000 / 50);\n\nexport default {\n  canvas: canvas,\n  start: function() {\n    canvas = document.getElementById('fireworks');\n    canvas.style.display = \"block\";\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    context = canvas.getContext('2d');\n    launchInterval = setInterval(function() { launchFrom(parseInt(Math.random() * SCREEN_WIDTH)); }, 800);\n    loopInterval = setInterval(loop, 1000 / 50);\n  },\n  stop: function() {\n    if(launchInterval) clearInterval(launchInterval);\n    if(loopInterval) clearInterval(loopInterval);\n    launchInterval = false;\n    loopInterval = false;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect }          from 'react-redux';\nimport ReactSwipe           from 'react-swipe';\nimport Mind                 from './Mind';\nimport fireworks            from './fireworks';\n\nimport { setLevel }       from './actions/setLevel'\nimport { setLives }       from './actions/setLives'\nimport { setStars }       from './actions/setStars'\nimport { setPlayerCount } from './actions/setPlayerCount'\nimport { setGameState }   from './actions/setGameState'\n\nimport './App.css';\n\nconst SLIDE_SPEED = 500;\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setLevel:       (level)       => dispatch(setLevel(level)),\n  setLives:       (lives)       => dispatch(setLives(lives)),\n  setStars:       (stars)       => dispatch(setStars(stars)),\n  setPlayerCount: (playerCount) => dispatch(setPlayerCount(playerCount)),\n  setGameState:   (gameState)   => dispatch(setGameState(gameState)),\n})\n\nclass App extends Component {\n\n  // constructor() {\n  //   super()\n  // }\n\n  playerCountPanes() {\n    const countArray = [2, 3, 4];\n    return countArray.map((num, i) => {\n      return (\n        <div key={\"playerCount\"+i}>\n          <div className=\"row playerCount\">\n            {/*\n            <div className=\"images\">\n              {\n                Array.apply(null, Array(num)).map((_, j) => {\n                  return ( <img key={\"brain\"+i+j} className=\"brain\" src=\"img/brain.png\" alt={\"Brain #\"+(j - -1)} /> );\n                })\n              }\n            </div>\n            */}\n            <div className=\"label\">{`${num}`} Players</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  levelPanes() {\n    const maxLevel = Mind.maxLevel(this.props.mind.playerCount);\n    const numSlides = maxLevel - - 1; // Add a final slide for victory condition\n\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"level\"+i}>\n          <div className=\"row level\">\n            <div className=\"label\">\n              {/* {i - - 1} {maxLevel} {i - - 1 <= maxLevel} */}\n              {i - - 1 <= maxLevel && <span>Level {i - - 1}</span>}\n              {i - - 1 >  maxLevel && <span>VICTORY</span>}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  livesPanes() {\n    // We allow lives to extend beyond the max, to keep the downgraded cell rendered while reverting levels\n    const maxLives = Mind.maxLives(this.props.mind.playerCount, this.props.mind.level) || 0;\n    const numSlides = Math.max(maxLives, this.props.mind.lives) - - 1;\n\n    let slides = Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"lives\"+i}>\n          <div className=\"row lives\">\n            <div className=\"images\" style={{ maxWidth: (i*90)+\"px\" }}>\n              {i === 0 && <div><img key={\"bunny-dead\"} className=\"bunny bunnyDead\" src=\"img/bunny-dead.png\" alt=\"Game Over\" /></div>}\n              {i   > 0 &&\n                Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <div><img key={\"bunny\"+i+j} className=\"bunny\" src=\"img/bunny.png\" alt={\"Life #\"+(j - -1)} /></div> );\n                })\n              }\n            </div>\n            <div className=\"label\">\n              {i === 0 && <span className=\"label\">GAME OVER</span>}\n              {i   > 0 && <span className=\"label\">Lives {`${i}`}  / {maxLives}</span>}\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return slides;\n  }\n\n  starsPanes() {\n    let numSlides = Math.max(Mind.maxStars(this.props.mind.level) - - 1 || 0, this.props.mind.stars);\n    return Array.apply(null, Array(numSlides)).map((_, i) => {\n      return (\n        <div key={\"stars\"+i}>\n          <div className=\"row stars\">\n            <div className=\"images\" style={{ maxWidth: (i*90)+\"px\" }}>\n              {\n                i > 0 && Array.apply(null, Array(i)).map((_, j) => {\n                  return ( <div><img key={\"star\"+i+j} className=\"star\" src=\"img/star.png\" alt={\"Star #\"+(j - -1)} /></div> );\n                })\n              }\n              {i === 0 && <div><img key={\"star-empty\"} className=\"starEmpty\" src=\"img/star_bw.png\" alt=\"0 Stars\" /></div> }\n            </div>\n            <div className=\"label\">Stars {i} / {Mind.maxStars(this.props.mind.level)}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const prev = prevProps.mind;\n    const curr = this.props.mind;\n\n    // If our level changed, we may need to increase lives or stars\n    if(prev.level !== curr.level) {\n      const prevMaxLives = Mind.maxLives(prev.playerCount, prev.level);\n      const currMaxLives = Mind.maxLives(curr.playerCount, curr.level);\n\n      if(prevMaxLives !== currMaxLives) {\n        const diffLives = prevMaxLives - currMaxLives;\n        const newLivesPos = this.livesSwipe.getPos() - diffLives;\n\n        // FIXME: Timing bug\n        const self = this;\n        setTimeout(function() {\n          // we allow undoing level gains, but loss can only be triggered by direct user action\n          if(newLivesPos > 0 && curr.gameState === \"active\") {\n            self.livesSwipe.slide(newLivesPos, SLIDE_SPEED);\n          }\n        }, 0);\n      }\n\n      else {\n        const prevMaxStars = Mind.maxStars(prev.level);\n        const currMaxStars = Mind.maxStars(curr.level);\n\n        if(prevMaxStars !== currMaxStars) {\n          const diffStars = prevMaxStars - currMaxStars;\n          var newStarsPos = this.starsSwipe.getPos() - diffStars;\n\n          // FIXME: Timing bug\n          const self = this;\n          setTimeout(function() {\n            self.starsSwipe.slide(newStarsPos, SLIDE_SPEED);\n          }, 0);\n        }\n      }\n    }\n    localStorage.setItem(\"mind\", JSON.stringify(curr));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Uncomment to debug */}\n        {/*\n          <pre>{ JSON.stringify(this.props) }</pre>\n        */}\n\n        <div id=\"preWrap\" className={this.props.mind.gameState === \"pre\" ? \"\" : \"hidden\"}>\n          <div id=\"playerCountSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.playerCountSwipe = reactSwipe)}\n              childCount={this.playerCountPanes().length}\n              className=\"playerCountSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.playerCount - 2,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => this.props.setPlayerCount(num - - 2)\n              }}\n            >\n              {this.playerCountPanes()}\n            </ReactSwipe>\n            <button\n              id=\"startButton\"\n              onClick={(e) => this.props.setGameState(\"active\")}\n              className={this.props.mind.gameState === \"pre\" ? \"visible\" : \"\"}\n            >\n              <span>Start Game</span>\n            </button>\n          </div>\n        </div>\n        {/* end #preWrap */}\n\n        <div id=\"activeWrap\" className={this.props.mind.gameState === \"pre\" ? \"hidden\" : \"\"}>\n\n          <div id=\"playerCountDisplay\">{this.props.mind.playerCount} Players</div>\n\n          <div id=\"levelSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.levelSwipe = reactSwipe)}\n              childCount={this.levelPanes().length}\n              className=\"levelSwipe\"\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.level - 1,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n\n                  this.props.setLevel(num - - 1);\n\n                  const maxLevel = Mind.maxLevel(this.props.mind.playerCount);\n                  if(num - - 1 > maxLevel) {\n                    this.props.setGameState(\"win\");\n                    //fireworks.start();\n                  }\n                },\n              }}\n            >\n              {this.levelPanes()}\n            </ReactSwipe>\n          </div>\n          {/* end #levelSwipeWrap */}\n\n          <div id=\"livesSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.livesSwipe = reactSwipe)}\n              childCount={this.livesPanes().length}\n              className={this.props.mind.gameState === \"active\" ? \"livesSwipe\" : \"livesSwipe inactive\"}\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.lives,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setLives(num);\n                }\n              }}\n            >\n              {this.livesPanes()}\n            </ReactSwipe>\n          </div>\n          {/* end #livesSwipeWrap */}\n\n          <div id=\"starsSwipeWrap\" className=\"reactSwipeWrap\">\n            <ReactSwipe\n              ref={reactSwipe => (this.starsSwipe = reactSwipe)}\n              childCount={this.starsPanes().length}\n              className={this.props.mind.gameState === \"active\" ? \"starsSwipe\" : \"starsSwipe hidden\"}\n              swipeOptions={{\n                continuous: false,\n                startSlide: this.props.mind.stars,\n                callback: (num, div) => {},\n                swiping: (fraction) => {},\n                transitionEnd: (num, div) => {\n                  this.props.setStars(num);\n                },\n              }}\n            >\n              {this.starsPanes()}\n            </ReactSwipe>\n\n            <button\n              id=\"newGameButton\"\n              onClick={(e) => this.props.setGameState(\"pre\")}\n              className={this.props.mind.gameState === \"win\" || this.props.mind.gameState === \"loss\" ? \"\" : \"hidden\"}\n            >\n              <span>New Game</span>\n            </button>\n\n          </div>\n          {/* end #starsSwipeWrap */}\n\n        </div>\n        {/* end #activeWrap */}\n\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setLevel = (level) => dispatch => {\n  dispatch({\n    type: 'SET_LEVEL',\n    payload: { 'level': level },\n  })\n}\n","export const setLives = (lives) => dispatch => {\n  dispatch({\n    type: 'SET_LIVES',\n    payload: { 'lives': lives },\n  })\n}\n","export const setStars = (stars) => dispatch => {\n  dispatch({\n    type: 'SET_STARS',\n    payload: { 'stars': stars },\n  })\n}\n","export const setPlayerCount = (playerCount) => dispatch => {\n  dispatch({\n    type: 'SET_PLAYER_COUNT',\n    payload: { 'playerCount': playerCount },\n  })\n}\n","export const setGameState = (gameState) => dispatch => {\n  dispatch({\n    type: 'SET_GAME_STATE',\n    payload: { 'gameState': gameState },\n  })\n}\n","const INIT_STATE = {\n  playerCount: 2,\n  level: 1,\n  lives: 2,\n  stars: 1,\n  gameState: 'pre', // pre, active, win, loss\n  // gameState: 'active', // pre, active, win, loss\n}\n\nconst STORAGE_STATE = JSON.parse(localStorage.getItem(\"mind\", \"false\"));\n\nexport default (state = STORAGE_STATE || INIT_STATE, action) => {\n  switch(action.type) {\n    case 'SET_PLAYER_COUNT':\n      return Object.assign({}, state, {\n        playerCount: action.payload.playerCount,\n        lives:       action.payload.playerCount,\n      })\n    case 'SET_LEVEL':\n      return Object.assign({}, state, {\n        level: action.payload.level,\n        gameState: action.payload.level > (16 - (state.playerCount * 2)) // TODO: access maxLevel in scope\n          ? \"win\"\n          : \"active\"\n      });\n    case 'SET_LIVES':\n      return Object.assign({}, state, {\n        lives: action.payload.lives,\n        gameState: action.payload.lives > 0 && state.gameState !== \"win\"\n          ? \"active\"\n          : \"loss\"\n      })\n    case 'SET_STARS':\n      return Object.assign({}, state, {\n        stars: action.payload.stars\n      });\n    case 'SET_GAME_STATE':\n      // Reset to new game if requested\n      const baseState = state.gameState !== \"pre\" && action.payload.gameState === \"pre\"\n        ? INIT_STATE\n        : state;\n      return Object.assign({}, baseState, {\n        gameState: action.payload.gameState\n      });\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport mind from './mindReducer';\n\nexport default combineReducers({\n mind\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport { Provider }       from 'react-redux';\nimport App                from './App';\nimport configureStore     from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}